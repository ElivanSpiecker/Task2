name: Pipeline PHP com Flyway (Homolog + Produ√ß√£o)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  homolog:
    name: üîß Homologa√ß√£o
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: "123"
          MYSQL_DATABASE:      "meu_banco_homolog"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -p123"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: üîÑ Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Instalar PHP, Composer e depend√™ncias
        run: |
          sudo apt update
          sudo apt install -y php php-mbstring php-xml php-mysql unzip sshpass default-jre
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install

      - name: ‚òÅÔ∏è Cache do Composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: ‚úÖ Garantir execu√ß√£o do PHPUnit
        run: chmod +x ./vendor/bin/phpunit

      - name: üìù Criar .env para testes
        run: |
          cat <<EOF > .env
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_NAME=meu_banco_homolog
          DB_USER=root
          DB_PASS=123
          EOF

      - name: üì• Instalar Flyway CLI
        run: |
          FLYWAY_V=11.10.1
          TAG=flyway-${FLYWAY_V}
          wget -qO flyway.tar.gz \
            https://github.com/flyway/flyway/releases/download/${TAG}/flyway-commandline-${FLYWAY_V}-linux-x64.tar.gz
          tar -xzf flyway.tar.gz

      - name: üöß Migrar esquema local (para testes)
        run: |
          ./flyway-11.10.1/flyway \
            -url=jdbc:mysql://127.0.0.1:3306/meu_banco_homolog?useSSL=false \
            -user=root \
            -password=123 \
            -locations=filesystem:./db/migrations \
            migrate

      - name: üß™ Rodar testes PHPUnit
        run: ./vendor/bin/phpunit --testdox tests/

      - name: üõ†Ô∏è Criar flyway.conf e executar migra√ß√µes remotas (Homologa√ß√£o)
        run: |
          cat <<EOF > flyway.conf
          flyway.url=${{ secrets.DB_URL_HOMOLOG }}
          flyway.user=${{ secrets.DB_USER_HOMOLOG }}
          flyway.password=${{ secrets.DB_PASS_HOMOLOG }}
          flyway.locations=filesystem:./db/migrations
          EOF
          ./flyway-11.10.1/flyway -configFiles=flyway.conf migrate

      - name: üöÄ Deploy para homologa√ß√£o
        run: |
          find . -type f ! -name ".env" | xargs tar -czf deploy.tar.gz
          sshpass -p "${{ secrets.SSH_PASS_HOMOLOG }}" \
            scp -o StrictHostKeyChecking=no deploy.tar.gz \
            "${{ secrets.SSH_USER_HOMOLOG }}@${{ secrets.SSH_HOST_HOMOLOG }}:/var/www/homolog"
          sshpass -p "${{ secrets.SSH_PASS_HOMOLOG }}" \
            ssh -o StrictHostKeyChecking=no "${{ secrets.SSH_USER_HOMOLOG }}@${{ secrets.SSH_HOST_HOMOLOG }}" \
            "cd /var/www/homolog && tar -xzf deploy.tar.gz && rm deploy.tar.gz"

  producao:
    name: üöÄ Produ√ß√£o
    runs-on: ubuntu-latest
    needs: homolog

    steps:
      - name: üîÑ Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Instalar JRE e sshpass
        run: |
          sudo apt update
          sudo apt install -y default-jre sshpass

      - name: üõ†Ô∏è Criar flyway.conf para Produ√ß√£o
        run: |
          cat <<EOF > flyway.conf
          flyway.url=${{ secrets.DB_URL_PROD }}
          flyway.user=${{ secrets.DB_USER_PROD }}
          flyway.password=${{ secrets.DB_PASS_PROD }}
          flyway.locations=filesystem:./db/migrations
          EOF

      - name: üóÉÔ∏è Executar Flyway no banco de Produ√ß√£o
        run: |
          wget -qO flyway.tar.gz \
            https://github.com/flyway/flyway/releases/download/flyway-11.10.1/flyway-commandline-11.10.1-linux-x64.tar.gz
          tar -xzf flyway.tar.gz
          ./flyway-11.10.1/flyway -configFiles=flyway.conf migrate

      - name: üì¶ Deploy para produ√ß√£o
        run: |
          find . -type f ! -name ".env" | xargs tar -czf deploy.tar.gz
          sshpass -p "${{ secrets.SSH_PASS_PROD }}" \
            scp -o StrictHostKeyChecking=no deploy.tar.gz \
            "${{ secrets.SSH_USER_PROD }}@${{ secrets.SSH_HOST_PROD }}:/var/www/producao"
          sshpass -p "${{ secrets.SSH_PASS_PROD }}" \
            ssh -o StrictHostKeyChecking=no "${{ secrets.SSH_USER_PROD }}@${{ secrets.SSH_HOST_PROD }}" \
            "cd /var/www/producao && tar -xzf deploy.tar.gz && rm deploy.tar.gz"
